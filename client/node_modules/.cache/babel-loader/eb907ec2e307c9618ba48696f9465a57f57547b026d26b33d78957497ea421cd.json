{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nexport const sendOrder = async ({\n  auth,\n  mobile,\n  basket\n}) => {\n  if (auth) {\n    const {\n      data\n    } = await $authHost({\n      method: 'POST',\n      url: 'api/orders',\n      data: {\n        mobile,\n        basket\n      }\n    });\n    return data;\n  } else {\n    const {\n      data\n    } = await $host({\n      method: 'POST',\n      url: 'api/orders',\n      data: {\n        mobile,\n        basket\n      }\n    });\n    return data;\n  }\n};\nexport const fetchOrders = async ({\n  limit,\n  page,\n  complete\n}) => {\n  const {\n    data\n  } = await $authHost.get(`api/orders?limit=${limit}&page=${page}&complete=${complete}`);\n  return data;\n};\nexport const fetchChangeStatusOrder = async ({\n  complete,\n  id\n}) => {\n  const {\n    data\n  } = await $authHost.put('api/orders', {\n    complete,\n    id\n  });\n  return data;\n};\nexport const fetchDeleteOrder = async ({\n  id\n}) => {\n  const {\n    data\n  } = await $authHost({\n    method: 'DELETE',\n    url: 'api/orders',\n    data: {\n      id\n    }\n  });\n  return data;\n};\nexport const getOneOrderDevices = async id => {\n  const {\n    data\n  } = await $authHost.get('api/orders/' + id);\n  return data;\n};","map":{"version":3,"names":["$authHost","$host","sendOrder","auth","mobile","basket","data","method","url","fetchOrders","limit","page","complete","get","fetchChangeStatusOrder","id","put","fetchDeleteOrder","getOneOrderDevices"],"sources":["C:/Users/18062/OneDrive/Рабочий стол/ВУУУУУУУУУУУЗ/3 КУРС 2 6 СЕМАК/Отчет курсач/RCSPCORS-main/RCSPCORS-main/market/client/src/http/ordersAPI.js"],"sourcesContent":["import {$authHost, $host} from \"./index\";\n\nexport const sendOrder = async ({auth, mobile, basket}) => {\n    if(auth) {\n        const {data} = await $authHost({method:'POST', url: 'api/orders', data: {mobile, basket}})\n        return data;\n    } else {\n        const {data} = await $host({method:'POST', url: 'api/orders', data: {mobile, basket}});\n        return data;\n    }\n}\n\nexport const fetchOrders = async ({limit, page, complete}) => {\n    const {data} = await $authHost.get(`api/orders?limit=${limit}&page=${page}&complete=${complete}`);\n    return data;\n}\n\nexport const fetchChangeStatusOrder = async ({complete, id}) => {\n    const {data} = await $authHost.put('api/orders', {complete, id});\n    return data;\n}\n\nexport const fetchDeleteOrder = async ({id}) => {\n    const {data} = await $authHost({method:'DELETE', url: 'api/orders', data: {id}});\n    return data;\n}\n\nexport const getOneOrderDevices = async (id) => {\n    const {data} = await $authHost.get('api/orders/' + id);\n    return data;\n}\n\n"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,KAAK,QAAO,SAAS;AAExC,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAO;EAACC,IAAI;EAAEC,MAAM;EAAEC;AAAM,CAAC,KAAK;EACvD,IAAGF,IAAI,EAAE;IACL,MAAM;MAACG;IAAI,CAAC,GAAG,MAAMN,SAAS,CAAC;MAACO,MAAM,EAAC,MAAM;MAAEC,GAAG,EAAE,YAAY;MAAEF,IAAI,EAAE;QAACF,MAAM;QAAEC;MAAM;IAAC,CAAC,CAAC;IAC1F,OAAOC,IAAI;EACf,CAAC,MAAM;IACH,MAAM;MAACA;IAAI,CAAC,GAAG,MAAML,KAAK,CAAC;MAACM,MAAM,EAAC,MAAM;MAAEC,GAAG,EAAE,YAAY;MAAEF,IAAI,EAAE;QAACF,MAAM;QAAEC;MAAM;IAAC,CAAC,CAAC;IACtF,OAAOC,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAAA,CAAO;EAACC,KAAK;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAC1D,MAAM;IAACN;EAAI,CAAC,GAAG,MAAMN,SAAS,CAACa,GAAG,CAAE,oBAAmBH,KAAM,SAAQC,IAAK,aAAYC,QAAS,EAAC,CAAC;EACjG,OAAON,IAAI;AACf,CAAC;AAED,OAAO,MAAMQ,sBAAsB,GAAG,MAAAA,CAAO;EAACF,QAAQ;EAAEG;AAAE,CAAC,KAAK;EAC5D,MAAM;IAACT;EAAI,CAAC,GAAG,MAAMN,SAAS,CAACgB,GAAG,CAAC,YAAY,EAAE;IAACJ,QAAQ;IAAEG;EAAE,CAAC,CAAC;EAChE,OAAOT,IAAI;AACf,CAAC;AAED,OAAO,MAAMW,gBAAgB,GAAG,MAAAA,CAAO;EAACF;AAAE,CAAC,KAAK;EAC5C,MAAM;IAACT;EAAI,CAAC,GAAG,MAAMN,SAAS,CAAC;IAACO,MAAM,EAAC,QAAQ;IAAEC,GAAG,EAAE,YAAY;IAAEF,IAAI,EAAE;MAACS;IAAE;EAAC,CAAC,CAAC;EAChF,OAAOT,IAAI;AACf,CAAC;AAED,OAAO,MAAMY,kBAAkB,GAAG,MAAOH,EAAE,IAAK;EAC5C,MAAM;IAACT;EAAI,CAAC,GAAG,MAAMN,SAAS,CAACa,GAAG,CAAC,aAAa,GAAGE,EAAE,CAAC;EACtD,OAAOT,IAAI;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}